#summary Memory state machine implemented in helgrind 3.3.0


For legend see  MemoryStateMachines. 

    http://data-race-test.googlecode.com/svn/trunk/msm/helgrind330.png
|| *Edge* || *Old state* || *Access type*     || *Condition*    || *New state* || *Segment set*     || *Lock set*      || *Race if ...* ||
||E1      || !NoAccess   || memory allocation || -              || New         || -                     || {}                   || - ||
||E2      || New         || read/write        || -              || Excl        || S=currS               || {}                   || - ||
||E3      || Excl        || read/write        || HB(S, currS)   || Excl        || S=currS               || {}                   || - ||
||E4      || Excl        || read              || !HB(S, currS)  || ShR         || TS={S,currS}          || {currLS}             || - ||
||E5      || ShR         || read              || -              || ShR         || TS=union(TS,currS)    || intersect(LS,currLS) || - ||
||E6      || Excl        || write             || !HB(S, currS)  || ShM         || TS={S,currS}          || {currLS}             || LS=={} ||
||E7      || ShR         || write             || -              || ShM         || TS=union(TS,currS)    || intersect(LS,currLS) || LS=={} ||
||E8      || ShM         || write             || -              || ShM         || TS=union(TS,currS)    || intersect(LS,currLS) || LS=={} ||
||E9,E10,E11,E12 ||      || none              || thread join    ||             || current thread is excluded from TS || LS               || - ||


Edges that lead to states !NoAccess and New are not shown. 


This state machine leads to (at least) one false negative (*test10*) 
and multiple false positives (*test11, test12, test13, test14, test16, test17, test28, test29, test32, test36, test38, test39, test40*).
See tests in RacecheckUnittest. 
 

